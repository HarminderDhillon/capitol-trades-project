name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        cd app
        npm ci
        
    - name: Run linting
      run: |
        cd app
        npm run lint
        
    - name: Run tests
      run: |
        cd app
        npm test

  docker:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push API image
      uses: docker/build-push-action@v4
      with:
        context: ./app
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/capitol-trades-api:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/capitol-trades-api:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/capitol-trades-api:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/capitol-trades-api:buildcache,mode=max

  deploy:
    name: Deploy to Production
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: |
        echo "Add your deployment commands here"
        # Example: SSH into server and pull new images
        # ssh user@server "docker-compose pull && docker-compose up -d" 